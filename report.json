[
    {
        "analysis_type": "detect_struct_packing",
        "contract_name": "InefficientStructPacking",
        "structure_name": "Person",
        "current_field_order": [
            {
                "field_name": "id",
                "field_type": "uint256",
                "field_size_bytes": 32
            },
            {
                "field_name": "isActive",
                "field_type": "bool",
                "field_size_bytes": 1
            },
            {
                "field_name": "age",
                "field_type": "uint8",
                "field_size_bytes": 1
            },
            {
                "field_name": "balance",
                "field_type": "uint256",
                "field_size_bytes": 32
            }
        ],
        "recommended_field_order": [
            {
                "field_name": "id",
                "field_type": "uint256",
                "field_size_bytes": 32
            },
            {
                "field_name": "balance",
                "field_type": "uint256",
                "field_size_bytes": 32
            },
            {
                "field_name": "isActive",
                "field_type": "bool",
                "field_size_bytes": 1
            },
            {
                "field_name": "age",
                "field_type": "uint8",
                "field_size_bytes": 1
            }
        ]
    },
    {
        "analysis_type": "detect_struct_packing",
        "contract_name": "InefficientStructPacking",
        "structure_name": "Car",
        "current_field_order": [
            {
                "field_name": "id",
                "field_type": "uint256",
                "field_size_bytes": 32
            },
            {
                "field_name": "numberOfWheels",
                "field_type": "uint8",
                "field_size_bytes": 1
            },
            {
                "field_name": "isActive",
                "field_type": "bool",
                "field_size_bytes": 1
            },
            {
                "field_name": "age",
                "field_type": "uint8",
                "field_size_bytes": 1
            },
            {
                "field_name": "numberOfPassangers",
                "field_type": "uint8",
                "field_size_bytes": 1
            },
            {
                "field_name": "balance",
                "field_type": "uint256",
                "field_size_bytes": 32
            },
            {
                "field_name": "isSuperCar",
                "field_type": "bool",
                "field_size_bytes": 1
            },
            {
                "field_name": "gasCunsumption",
                "field_type": "uint128",
                "field_size_bytes": 16
            }
        ],
        "recommended_field_order": [
            {
                "field_name": "id",
                "field_type": "uint256",
                "field_size_bytes": 32
            },
            {
                "field_name": "balance",
                "field_type": "uint256",
                "field_size_bytes": 32
            },
            {
                "field_name": "gasCunsumption",
                "field_type": "uint128",
                "field_size_bytes": 16
            },
            {
                "field_name": "numberOfWheels",
                "field_type": "uint8",
                "field_size_bytes": 1
            },
            {
                "field_name": "isActive",
                "field_type": "bool",
                "field_size_bytes": 1
            },
            {
                "field_name": "age",
                "field_type": "uint8",
                "field_size_bytes": 1
            },
            {
                "field_name": "numberOfPassangers",
                "field_type": "uint8",
                "field_size_bytes": 1
            },
            {
                "field_name": "isSuperCar",
                "field_type": "bool",
                "field_size_bytes": 1
            }
        ]
    },
    {
        "analysis_type": "detect_state_variable_packing",
        "contract_name": "UnoptimizedContract",
        "current_state_variable_order": [
            {
                "variable_name": "largeArray",
                "variable_type": "uint256[]",
                "variable_size_bytes": 32
            },
            {
                "variable_name": "balances",
                "variable_type": "mapping(address => uint256)",
                "variable_size_bytes": 32
            },
            {
                "variable_name": "totalBalance",
                "variable_type": "uint256",
                "variable_size_bytes": 32
            },
            {
                "variable_name": "anSmallVariable",
                "variable_type": "uint8",
                "variable_size_bytes": 1
            },
            {
                "variable_name": "anotherSmallVariable",
                "variable_type": "uint8",
                "variable_size_bytes": 1
            },
            {
                "variable_name": "justAnotheruint16",
                "variable_type": "uint16",
                "variable_size_bytes": 2
            },
            {
                "variable_name": "justAnotheruint32",
                "variable_type": "uint32",
                "variable_size_bytes": 4
            },
            {
                "variable_name": "isActive",
                "variable_type": "bool",
                "variable_size_bytes": 1
            },
            {
                "variable_name": "isConfirmed",
                "variable_type": "bool",
                "variable_size_bytes": 1
            },
            {
                "variable_name": "isTransfered",
                "variable_type": "bool",
                "variable_size_bytes": 1
            },
            {
                "variable_name": "threshold",
                "variable_type": "uint256",
                "variable_size_bytes": 32
            },
            {
                "variable_name": "contract_address",
                "variable_type": "string",
                "variable_size_bytes": 32
            },
            {
                "variable_name": "owner_name",
                "variable_type": "string",
                "variable_size_bytes": 32
            },
            {
                "variable_name": "fixedArray",
                "variable_type": "uint8[10]",
                "variable_size_bytes": 10
            },
            {
                "variable_name": "dynamicArray",
                "variable_type": "uint8[]",
                "variable_size_bytes": 32
            }
        ],
        "recommended_state_variable_order": [
            {
                "variable_name": "largeArray",
                "variable_type": "uint256[]",
                "variable_size_bytes": 32
            },
            {
                "variable_name": "balances",
                "variable_type": "mapping(address => uint256)",
                "variable_size_bytes": 32
            },
            {
                "variable_name": "totalBalance",
                "variable_type": "uint256",
                "variable_size_bytes": 32
            },
            {
                "variable_name": "threshold",
                "variable_type": "uint256",
                "variable_size_bytes": 32
            },
            {
                "variable_name": "contract_address",
                "variable_type": "string",
                "variable_size_bytes": 32
            },
            {
                "variable_name": "owner_name",
                "variable_type": "string",
                "variable_size_bytes": 32
            },
            {
                "variable_name": "dynamicArray",
                "variable_type": "uint8[]",
                "variable_size_bytes": 32
            },
            {
                "variable_name": "fixedArray",
                "variable_type": "uint8[10]",
                "variable_size_bytes": 10
            },
            {
                "variable_name": "justAnotheruint32",
                "variable_type": "uint32",
                "variable_size_bytes": 4
            },
            {
                "variable_name": "justAnotheruint16",
                "variable_type": "uint16",
                "variable_size_bytes": 2
            },
            {
                "variable_name": "anSmallVariable",
                "variable_type": "uint8",
                "variable_size_bytes": 1
            },
            {
                "variable_name": "anotherSmallVariable",
                "variable_type": "uint8",
                "variable_size_bytes": 1
            },
            {
                "variable_name": "isActive",
                "variable_type": "bool",
                "variable_size_bytes": 1
            },
            {
                "variable_name": "isConfirmed",
                "variable_type": "bool",
                "variable_size_bytes": 1
            },
            {
                "variable_name": "isTransfered",
                "variable_type": "bool",
                "variable_size_bytes": 1
            }
        ]
    },
    {
        "analysis_type": "detect_state_variable_packing",
        "contract_name": "InefficientStructPacking",
        "current_state_variable_order": [
            {
                "variable_name": "networkVersionUsed",
                "variable_type": "string",
                "variable_size_bytes": 32
            },
            {
                "variable_name": "person",
                "variable_type": "InefficientStructPacking.Person",
                "variable_size_bytes": 96
            }
        ],
        "recommended_state_variable_order": [
            {
                "variable_name": "person",
                "variable_type": "InefficientStructPacking.Person",
                "variable_size_bytes": 96
            },
            {
                "variable_name": "networkVersionUsed",
                "variable_type": "string",
                "variable_size_bytes": 32
            }
        ]
    },
    {
        "analysis_type": "detect_boolean_packing",
        "contract_name": "UnoptimizedContract",
        "boolean_variables": [
            "isActive",
            "isConfirmed",
            "isTransfered"
        ],
        "message": "One uint256 can be used to merge all boolean variables, use this pattern ./templates/booleanPacking.sol"
    },
    {
        "analysis_type": "detect_boolean_packing",
        "contract_name": "InefficientStructPacking",
        "message": "No boolean variables - no packing required"
    },
    {
        "analysis_type": "detect_uintstar",
        "contract_name": "UnoptimizedContract",
        "uint*_variables": [
            {
                "var_name": "anSmallVariable",
                "var_type": "uint8"
            },
            {
                "var_name": "anotherSmallVariable",
                "var_type": "uint8"
            },
            {
                "var_name": "justAnotheruint16",
                "var_type": "uint16"
            },
            {
                "var_name": "justAnotheruint32",
                "var_type": "uint32"
            },
            {
                "var_name": "fixedArray",
                "var_type": "uint8[10]"
            },
            {
                "var_name": "dynamicArray",
                "var_type": "uint8[]"
            }
        ],
        "message": "Instead of all these uint* datatypes, you better use uint256 to help avoid the need for conversion and save gas."
    },
    {
        "analysis_type": "detect_uintstar",
        "contract_name": "InefficientStructPacking",
        "message": "No uint* variables - no packing required"
    },
    {
        "analysis_type": "detect_string_to_bytes32",
        "contract_name": "UnoptimizedContract",
        "string_variables": [
            {
                "var_name": "contract_address",
                "var_intialized": true
            },
            {
                "var_name": "owner_name",
                "var_intialized": true
            }
        ],
        "message": "Instead of string variables that are initialized with a fixed value, in most cases you can fit it in a bytes32 instead."
    },
    {
        "analysis_type": "detect_string_to_bytes32",
        "contract_name": "InefficientStructPacking",
        "string_variables": [
            {
                "var_name": "networkVersionUsed",
                "var_intialized": true
            }
        ],
        "message": "Instead of string variables that are initialized with a fixed value, in most cases you can fit it in a bytes32 instead."
    },
    {
        "analysis_type": "detect_dynamic_size_arrays",
        "contract_name": "UnoptimizedContract",
        "dynamic_arrays": [
            {
                "arr_name": "largeArray",
                "arr_type": "uint256[]"
            },
            {
                "arr_name": "dynamicArray",
                "arr_type": "uint8[]"
            }
        ],
        "message": "See if you can state the array variable lenghts as static instead of dynamic - example: uint256[] => uint256[10]"
    },
    {
        "analysis_type": "detect_dynamic_size_arrays",
        "contract_name": "InefficientStructPacking",
        "message": "No dynamic arrays - no optimization required"
    }
]